{"ast":null,"code":"var _jsxFileName = \"E:\\\\VSCodeProjects\\\\ReactCalculatorApp\\\\calculator-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberButton = () => {};\n_c = NumberButton;\nconst ClearButton = props => {\n  const handleClick = () => {\n    props.setCalculatedAnswer(\"0\");\n    props.setExpression(\"\");\n    props.setNextElement(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"clear button\",\n    id: props.id,\n    onClick: handleClick,\n    type: \"button\",\n    children: \"AC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ClearButton;\nconst OperandButton = props => {\n  const handleClick = () => {\n    if (props.nextElement != \"\") {\n      //if next element is empty, don't start expression with operand\n      if (typeof Number(props.nextElement) === 'number') {\n        //move the number to expression\n        props.setExpression(props.expression.concat(props.nextElement));\n        props.setNextElement(props.value);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"operand button\",\n    id: props.id,\n    onClick: handleClick,\n    type: \"button\",\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c3 = OperandButton;\nconst EqualButton = () => {};\n_c4 = EqualButton;\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.id,\n    className: \"display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expressionDisplay\",\n      children: [props.expression, props.nextElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculatedDisplay\",\n      children: props.calculatedAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Display;\nconst App = () => {\n  _s();\n  const [expression, setExpression] = useState(\"0\");\n  const [nextElement, setNextElement] = useState(\"\");\n  const [calculatedAnswer, setCalculatedAnswer] = useState(\"0\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      id: \"display\",\n      expression: expression,\n      nextElement: nextElement,\n      calculatedAnswer: calculatedAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n      id: \"clear\",\n      setExpression: setExpression,\n      setNextElement: setNextElement,\n      setCalculatedAnswer: setCalculatedAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperandButton, {\n      id: \"multiply\",\n      value: \"*\",\n      setNextElement: setNextElement,\n      nextElement: nextElement,\n      setExpression: setExpression,\n      expression: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"m0NFA8x0JYnlE73MYaR6Lo9k8mY=\");\n_c6 = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this));\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"NumberButton\");\n$RefreshReg$(_c2, \"ClearButton\");\n$RefreshReg$(_c3, \"OperandButton\");\n$RefreshReg$(_c4, \"EqualButton\");\n$RefreshReg$(_c5, \"Display\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","NumberButton","_c","ClearButton","props","handleClick","setCalculatedAnswer","setExpression","setNextElement","className","id","onClick","type","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","OperandButton","nextElement","Number","expression","concat","value","_c3","EqualButton","_c4","Display","calculatedAnswer","_c5","App","_s","_c6","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["E:/VSCodeProjects/ReactCalculatorApp/calculator-app/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n\nconst NumberButton = () => {\n\n}\n\nconst ClearButton = (props) => {\n\n  const handleClick = () => {\n    props.setCalculatedAnswer(\"0\");\n    props.setExpression(\"\");\n    props.setNextElement(\"\");\n  }\n\n  return (\n    <button className='clear button' id={props.id} onClick={handleClick} type='button'>AC</button>\n  )\n}\n\nconst OperandButton = (props) => {\n\n  const handleClick = () => {\n    if(props.nextElement != \"\"){ //if next element is empty, don't start expression with operand\n      if(typeof (Number(props.nextElement)) === 'number'){ //move the number to expression\n        props.setExpression(props.expression.concat(props.nextElement));\n        props.setNextElement(props.value);\n      }\n    }\n  }\n\n  return(\n    <button className='operand button' id={props.id} onClick={handleClick} type='button'>{props.value}</button>\n  )\n}\n\nconst EqualButton = () => {\n\n}\n\nconst Display = (props) => {\n  return (\n    <div id={props.id} className='display'>\n      <div className='expressionDisplay'>\n        {props.expression}{props.nextElement}\n      </div>\n      <div className='calculatedDisplay'>\n        {props.calculatedAnswer}\n      </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [expression, setExpression] = useState(\"0\");\n  const [nextElement, setNextElement] = useState(\"\");\n  const [calculatedAnswer, setCalculatedAnswer] = useState(\"0\");\n\n  return(\n    <div id='calculator'>\n      <Display id='display' expression={expression} nextElement={nextElement} calculatedAnswer={calculatedAnswer}/>\n      <ClearButton id='clear' setExpression={setExpression} setNextElement={setNextElement} setCalculatedAnswer={setCalculatedAnswer}/>\n      <OperandButton id='multiply' value='*' setNextElement={setNextElement} nextElement={nextElement} setExpression={setExpression} expression={expression}/>\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}